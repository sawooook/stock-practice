import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.3.0-M1'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.22'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

subprojects {
	apply plugin: "org.springframework.boot"
	apply plugin: "io.spring.dependency-management"
	apply plugin: "java"

	dependencies {

	}
}

/*

subprojects {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-batch'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
		implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
		implementation 'org.jetbrains.kotlin:kotlin-reflect'
		implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
		runtimeOnly 'com.h2database:h2'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'io.projectreactor:reactor-test'
		testImplementation 'org.springframework.batch:spring-batch-test'
	}
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '21'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

project('api') {
	dependencies {
		compileOnly(project(':core'))
	}
}

project(':batch') {
	dependencies {
		compileOnly(project(':core'))
	}
}
*/
